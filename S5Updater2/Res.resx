<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="TabMain" xml:space="preserve">
    <value>Game</value>
  </data>
  <data name="Open" xml:space="preserve">
    <value>Open</value>
  </data>
  <data name="SetRegistry" xml:space="preserve">
    <value>set registry</value>
  </data>
  <data name="GoldPath" xml:space="preserve">
    <value>Gold: </value>
  </data>
  <data name="HEPath" xml:space="preserve">
    <value>HE: </value>
  </data>
  <data name="SelectGold" xml:space="preserve">
    <value>Select Gold installation folder</value>
  </data>
  <data name="SelectHE" xml:space="preserve">
    <value>Select HE installation folder</value>
  </data>
  <data name="Log_SetGoldPath" xml:space="preserve">
    <value>Set Gold path to: </value>
  </data>
  <data name="Log_SetHEPath" xml:space="preserve">
    <value>Set HE path to: </value>
  </data>
  <data name="ShowLog" xml:space="preserve">
    <value>show log</value>
  </data>
  <data name="Log_SetGoldReg" xml:space="preserve">
    <value>Set Gold Registry path to: </value>
  </data>
  <data name="ReallyOverrideRegistry" xml:space="preserve">
    <value>Really override registry?</value>
  </data>
  <data name="EasyMode" xml:space="preserve">
    <value>Easy Mode</value>
  </data>
  <data name="Update105" xml:space="preserve">
    <value>Update from 1.05</value>
  </data>
  <data name="Update106" xml:space="preserve">
    <value>Win 10 Fix</value>
  </data>
  <data name="UpdateMapPacks" xml:space="preserve">
    <value>Update MapPacks</value>
  </data>
  <data name="UpdateCppLogic" xml:space="preserve">
    <value>Update CppLogic</value>
  </data>
  <data name="Enabled" xml:space="preserve">
    <value>enabled</value>
  </data>
  <data name="AllPatched" xml:space="preserve">
    <value>everything patched</value>
  </data>
  <data name="Prog_U106_Download" xml:space="preserve">
    <value>Download exe patch</value>
  </data>
  <data name="Prog_U106_Copy" xml:space="preserve">
    <value>Patching exe</value>
  </data>
  <data name="Done" xml:space="preserve">
    <value>done</value>
  </data>
  <data name="ErrorDetected" xml:space="preserve">
    <value>An error occured, please look at the log. If you don't know what to do, copy&amp;paste it when asking for help.</value>
  </data>
  <data name="Prog_U105_MsgPatch" xml:space="preserve">
    <value>Opening a browser window for download. Please execute, if it finishes, then press OK.</value>
  </data>
  <data name="Prog_U105_DownloadPatch" xml:space="preserve">
    <value>Downloading patch</value>
  </data>
  <data name="Prog_U105_Successful" xml:space="preserve">
    <value>Successful: </value>
  </data>
  <data name="Prog_U105_WaitForExec" xml:space="preserve">
    <value>Executing patch, waiting for it to finish...</value>
  </data>
  <data name="Prog_GRel_NoChange" xml:space="preserve">
    <value>no change needed</value>
  </data>
  <data name="Prog_GRel_Patching" xml:space="preserve">
    <value>patching</value>
  </data>
  <data name="Prog_CppL_Validating" xml:space="preserve">
    <value>validating CppLogic</value>
  </data>
  <data name="Resolution" xml:space="preserve">
    <value>Resolution:</value>
  </data>
  <data name="Language" xml:space="preserve">
    <value>Language:</value>
  </data>
  <data name="Log_SetLang" xml:space="preserve">
    <value>Set Language to: </value>
  </data>
  <data name="Log_SetReso" xml:space="preserve">
    <value>Set Resolution to: </value>
  </data>
  <data name="DevMode" xml:space="preserve">
    <value>Development Mode</value>
  </data>
  <data name="Log_SetDev" xml:space="preserve">
    <value>Set Dev Mode to: </value>
  </data>
  <data name="ShowIntro" xml:space="preserve">
    <value>show intro video</value>
  </data>
  <data name="UpdateDebugger" xml:space="preserve">
    <value>Update LuaDebugger</value>
  </data>
  <data name="Prog_Debugger_Updating" xml:space="preserve">
    <value>validating LuaDebugger</value>
  </data>
  <data name="Log_SetDebuggerEnabled" xml:space="preserve">
    <value>set LuaDebugger enabled: </value>
  </data>
  <data name="Log_SetHookEnabled" xml:space="preserve">
    <value>set CppLogic enabled: </value>
  </data>
  <data name="ConvertHE" xml:space="preserve">
    <value>Convert HE to Gold</value>
  </data>
  <data name="TaskConvert_SkipFont" xml:space="preserve">
    <value>Skiping fonts</value>
  </data>
  <data name="TaskConvert_QstSetReg" xml:space="preserve">
    <value>Set Gold Registry path to: </value>
  </data>
  <data name="TaskConvert_QstRuFull" xml:space="preserve">
    <value>Skip patching Fonts? Patching Fonts causes UI errors when using Russian as language and is required for other languages.</value>
  </data>
  <data name="TaskConvert_QstRu" xml:space="preserve">
    <value>Do you want to use Russian as language?</value>
  </data>
  <data name="TaskConvert_QstLinkEditor" xml:space="preserve">
    <value>Create shortcuts to mapeditor on desktop?</value>
  </data>
  <data name="TaskConvert_QstLink" xml:space="preserve">
    <value>Create shortcuts to game on desktop?</value>
  </data>
  <data name="TaskConvert_PatchFont" xml:space="preserve">
    <value>Patching fonts</value>
  </data>
  <data name="TaskConvert_PatchData" xml:space="preserve">
    <value>Patching data</value>
  </data>
  <data name="TaskConvert_DownloadFont" xml:space="preserve">
    <value>Downloading fonts</value>
  </data>
  <data name="TaskConvert_DownloadFileData" xml:space="preserve">
    <value>Downloading data patch</value>
  </data>
  <data name="TaskConvert_CopyingInstall" xml:space="preserve">
    <value>Copying he installation</value>
  </data>
  <data name="TaskMPMap_Checkout" xml:space="preserve">
    <value>checking out</value>
  </data>
  <data name="TaskMPMap_Cloning" xml:space="preserve">
    <value>Not found, cloning</value>
  </data>
  <data name="TaskMPMap_CopyFiles" xml:space="preserve">
    <value>copying files</value>
  </data>
  <data name="TaskMPMap_DirtyDeleting" xml:space="preserve">
    <value>deleting changes</value>
  </data>
  <data name="TaskMPMap_DirtyKeep" xml:space="preserve">
    <value>Error! changes in repo, but chosen to keep</value>
  </data>
  <data name="TaskMPMap_ErrDirty" xml:space="preserve">
    <value>You have changes in {0}, delete?</value>
  </data>
  <data name="TaskMPMap_Fetch" xml:space="preserve">
    <value>found, fetching</value>
  </data>
  <data name="TaskMPMap_LatestComm" xml:space="preserve">
    <value>latest commit: </value>
  </data>
  <data name="TaskMPMap_Repo" xml:space="preserve">
    <value>Handling repo: </value>
  </data>
  <data name="TaskMPMap_Start" xml:space="preserve">
    <value>updating MP maps and scripts</value>
  </data>
  <data name="TabMaps" xml:space="preserve">
    <value>Maps</value>
  </data>
  <data name="HEFixEditor" xml:space="preserve">
    <value>Fix Mapeditor</value>
  </data>
  <data name="HEEditor_CreateLinks" xml:space="preserve">
    <value>Create shortcuts to extra1 &amp; extra2 on desktop?</value>
  </data>
  <data name="TaskUserScript_WriteLog" xml:space="preserve">
    <value>Written UserScript to {0}</value>
  </data>
  <data name="UserScriptColor" xml:space="preserve">
    <value>Player Color:</value>
  </data>
  <data name="UserScriptZoom" xml:space="preserve">
    <value>Zoom</value>
  </data>
  <data name="UserScript" xml:space="preserve">
    <value>UserScript:</value>
  </data>
  <data name="InstallMap" xml:space="preserve">
    <value>Install Map</value>
  </data>
  <data name="Log_InstallMap" xml:space="preserve">
    <value>Map installed: </value>
  </data>
  <data name="Log_InstallModPack" xml:space="preserve">
    <value>ModPack installed: </value>
  </data>
  <data name="CopyAll" xml:space="preserve">
    <value>Copy all</value>
  </data>
  <data name="Paths" xml:space="preserve">
    <value>Paths:</value>
  </data>
  <data name="Registry" xml:space="preserve">
    <value>Registry:</value>
  </data>
  <data name="Mapping" xml:space="preserve">
    <value>Mapping:</value>
  </data>
  <data name="Settings" xml:space="preserve">
    <value>Settings</value>
  </data>
  <data name="SettingsBottom" xml:space="preserve">
    <value>Settings:</value>
  </data>
  <data name="MapPacks" xml:space="preserve">
    <value>MapPacks:</value>
  </data>
  <data name="Update" xml:space="preserve">
    <value>Update</value>
  </data>
  <data name="Scan" xml:space="preserve">
    <value>Scan</value>
  </data>
  <data name="ModPacks" xml:space="preserve">
    <value>ModPacks:</value>
  </data>
  <data name="Maps" xml:space="preserve">
    <value>Maps:</value>
  </data>
</root>